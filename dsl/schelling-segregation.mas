name: "Schelling's segregation model"
steps: 25
territory:
    width: 50
    height: 50
    coordinates:
agents:
    Agent "1" type: "race-1"
        locatedAt:
            Coordinate x: 0 y: 0
        agentProperties:
            AgentProperty "happy" value: 0 representLiveness: false
    Agent "2" type: "race-1"
        locatedAt:
            Coordinate x: 1 y: 1
        agentProperties:
            AgentProperty "happy" value: 0 representLiveness: false
    Agent "3" type: "race-1"
        locatedAt:
            Coordinate x: 2 y: 2
        agentProperties:
            AgentProperty "happy" value: 0 representLiveness: false
    Agent "4" type: "race-2"
        locatedAt:
            Coordinate x: 0 y: 1
        agentProperties:
            AgentProperty "happy" value: 0 representLiveness: false
    Agent "5" type: "race-2"
        locatedAt:
            Coordinate x: 0 y: 2
        agentProperties:
            AgentProperty "happy" value: 0 representLiveness: false
    Agent "6" type: "race-2"
        locatedAt:
            Coordinate x: 0 y: 3
        agentProperties:
            AgentProperty "happy" value: 0 representLiveness: false
agentRules:
    AgentRule "Rule 1 - race-1" type: "race-1"
        description: "If an agent has at least k=3 neighbors belonging to the same group, then it is happy"
        preconditions:
            Condition "get-neighbors"
                optionsString:
                    Option compare value: "equal"
                    Option optionType value: "race-1"
                optionsInt:
                    Option optionThreshold value: 1
        postconditions:
            Condition "change-property"
                optionsString:
                    Option propertyAgent value: "happy"
                optionsInt:
                    Option probabilityOfChanging value: 1
                    Option optionValue value: 1
    AgentRule "Rule 2 - race-1" type: "race-1"
        description: "If an agent is unhappy, it keeps moving to new locations until it is happy, while respecting the 1-agent-per-position rule"
        preconditions:
            Condition "compare-property"
                optionsString:
                    Option compare value: "equal"
                    Option propertyAgent value: "happy"
                optionsInt:
                    Option optionThreshold value: 0
        postconditions:
            Condition "move"
                optionsString:
                    Option direction value: "free-random"
                optionsInt:
    AgentRule "Rule 3 - race-2" type: "race-2"
        description: "If an agent has at least k=3 neighbors belonging to the same group, then it is happy"
        preconditions:
            Condition "get-neighbors"
                optionsString:
                    Option compare value: "equal"
                    Option optionType value: "race-2"
                optionsInt:
                    Option optionThreshold value: 1
        postconditions:
            Condition "change-property"
                optionsString:
                    Option propertyAgent value: "happy"
                optionsInt:
                    Option probabilityOfChanging value: 1
                    Option optionValue value: 1
    AgentRule "Rule 4 - race-2" type: "race-2"
        description: "If an agent is unhappy, it keeps moving to new locations until it is happy, while respecting the 1-agent-per-position rule"
        preconditions:
            Condition "compare-property"
                optionsString:
                    Option compare value: "equal"
                    Option propertyAgent value: "happy"
                    Option optionType value: "race-2"
                optionsInt:
                    Option optionThreshold value: 0
        postconditions:
            Condition "move"
                optionsString:
                    Option direction value: "free-random"
                optionsInt:
